{{- if .Values.linux.enabled}}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "csspa.fullname" . }}
  namespace: {{ .Release.Namespace }}
{{ include "csspa.labels" . | indent 2 }}
spec:
  updateStrategy:
{{ toYaml .Values.linux.updateStrategy | indent 4 }}
  selector:
    matchLabels:
      app: {{ template "csspa.name" . }}
  template:
    metadata:
{{ include "csspa.labels" . | indent 6 }}
{{- if .Values.linux.podLabels }}
{{- toYaml .Values.linux.podLabels | nindent 8 }}
{{- end }}
{{- if or .Values.linux.podAnnotations .Values.enableArcExtension }}
      annotations:
{{- if .Values.linux.podAnnotations}}
{{- toYaml .Values.linux.podAnnotations | nindent 8 }}
{{- end }}
{{- end }}
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
      serviceAccountName: csi-secrets-store-provider-alibabacloud
      hostNetwork: true
      containers:
        - name: provider-alibabacloud-installer
          image: "{{ .Values.linux.image.repository }}:{{ .Values.linux.image.tag }}"
          imagePullPolicy: {{ .Values.linux.image.pullPolicy }}
          args:
            - --provider-volume=/provider
            {{- if .Values.logVerbosity }}
            - -v={{ .Values.logVerbosity }}
            {{- end }}
            - --healthz-port={{ .Values.linux.healthzPort }}
            - --healthz-path={{ .Values.linux.healthzPath }}
            - --healthz-timeout={{ .Values.linux.healthzTimeout }}
          livenessProbe:
            httpGet:
              path: {{ .Values.linux.healthzPath }}
              port: {{ .Values.linux.healthzPort }}
            failureThreshold: 3
            initialDelaySeconds: 5
            timeoutSeconds: 10
            periodSeconds: 30
          resources:
{{ toYaml .Values.linux.resources | indent 12 }}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 0
            capabilities:
              drop:
              - ALL
          volumeMounts:
            - name: provider-vol
              mountPath: /provider
            {{- if .Values.linux.volumeMounts }}
            {{- toYaml .Values.linux.volumeMounts | nindent 12 }}
            {{- end}}
      affinity:
{{ toYaml .Values.linux.affinity | indent 8 }}
      {{- if .Values.linux.priorityClassName }}
      priorityClassName: {{ .Values.linux.priorityClassName | quote }}
      {{- end }}
      volumes:
        - name: provider-vol
          hostPath:
            path: {{ .Values.linux.providersDir }}
        {{- if .Values.linux.volumes }}
        {{- toYaml .Values.linux.volumes | nindent 8 }}
        {{- end}}
      nodeSelector:
        kubernetes.io/os: linux
{{- if .Values.linux.nodeSelector }}
{{- toYaml .Values.linux.nodeSelector | nindent 8 }}
{{- end }}
{{- with .Values.linux.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
{{- end -}}
